6/13 FormatControls.js 184行，增加首行缩进功能
					    189行， 增加清除样式功能
					    
			var defaultStyleFormats = [
				{title: 'Headers', items: [
					{title: 'Header 1', format: 'h1'},
					{title: 'Header 2', format: 'h2'},
					{title: 'Header 3', format: 'h3'},
					{title: 'Header 4', format: 'h4'},
					{title: 'Header 5', format: 'h5'},
					{title: 'Header 6', format: 'h6'}
				]},

				{title: 'Inline', items: [
					{title: 'Bold', icon: 'bold', format: 'bold'},
					{title: 'Italic', icon: 'italic', format: 'italic'},
					{title: 'Underline', icon: 'underline', format: 'underline'},
					{title: 'Strikethrough', icon: 'strikethrough', format: 'strikethrough'},
					{title: 'Superscript', icon: 'superscript', format: 'superscript'},
					{title: 'Subscript', icon: 'subscript', format: 'subscript'},
					{title: 'Code', icon: 'code', format: 'code'}
				]},

				{title: 'Blocks', items: [
				    {title: '首行缩进',format:'textindent'},
					{title: 'Paragraph', format: 'p'},
					{title: 'Blockquote', format: 'blockquote'},
					{title: 'Div', format: 'div'},
					{title: 'Pre', format: 'pre'}
				]},

				{title: 'Alignment', items: [
					{title: 'Left', icon: 'alignleft', format: 'alignleft'},
					{title: 'Center', icon: 'aligncenter', format: 'aligncenter'},
					{title: 'Right', icon: 'alignright', format: 'alignright'},
					{title: 'Justify', icon: 'alignjustify', format: 'alignjustify'}
				]},
				{title: '清除样式',format :'removeformat'}
			];

6/13 Formatter.js 126行 ，增加首行缩进的执行format项  				textindent:{selector:'p',attributes:{'class':'p-s02'}},


7/2  FormatControls.js 187 , {title: '清除样式',format :'removeformat'}

7/11 从4.0 beta 	升级到4.0.1 , 项目进行迁移和升级测试 ，同时对上述变更应用到tinymce 4.0.1

     FormatControls.js  , 227行:  {title: '首行缩进',format:'textindent'}
     					  240行： {title: '清除样式',format :'removeformat'}
     					  
     Formatter.js 126行 ，textindent:{selector:'p',attributes:{'class':'p-s02'}},
     
7/12 FormatControls.js 601行, 增加sizeformat 参数，			var items = [], defaultFontsizeFormats = '8pt 10pt 12pt 14pt 18pt 24pt 36pt 48pt 64pt';

7/25 FormatControls.js 230行 ， 删除		{title: 'Div', format: 'div'},

8/1 FormatControls.js 557行， 增加字体
			    '黑体=SimHei,Hiragino Sans GB,STHeiti;' +
			    '宋体=SimSun,STSong;' +
			    '仿宋=FangSong,STFangsong;'+
			    '楷体=KaiTi,STKaiti;' +
     
9/12 FormatControls.js 557line, 修改字体，屏蔽仿宋和楷体
			    '黑体=Hiragino Sans GB,Microsoft YaHei,SimHei,STHeiti;' +
			    '宋体=SimSun,宋体,STSong;' +
			   // '仿宋=FangSong,STFangsong;'+
			    //'楷体=KaiTi,STKaiti;' +
			    
9/22 FormatControls.js  570line ， 去掉3个字体
					//'Symbol=symbol;' +
					'Tahoma=tahoma,arial,helvetica,sans-serif;' +
					'Terminal=terminal,monaco;' +
					'Times New Roman=times new roman,times;' +
					'Trebuchet MS=trebuchet ms,geneva;' +
					'Verdana=verdana,geneva;';
					//'Webdings=webdings;' +
					//'Wingdings=wingdings,zapf dingbats';
					
2014/2/24 MenuItem.js 58行 ，给字体选择器增加分隔符
            if (self._text === '-' || self._text === '|' || (typeof self._text=="object"&&self._text.raw=="-")) {
            
2014/3/8 FormatControls.js 589 , 自定义字体功能
            if(editor.settings.custom_font_formats){
                var custom_fonts=createFormats(editor.settings.custom_font_formats);
                var menu=[];
                each(custom_fonts, function(font) {
                    var fontItem={
                        text: {raw: font[0]},
                        value: font[1],
                        textStyle: font[1].indexOf('dings') == -1 ? 'font-family:' + font[1] : ''
                    }                    
                    menu.push(fontItem);
                });               
                items.push({
                    text:'本地字体',
                    menu:menu,
                    value:'本地字体'
                })
            }
            
2014/3/13 plugins/contextmenu/plugin.js   21行， 去掉image      contextmenu = editor.settings.contextmenu || 'link inserttable | cell row column deletetable';

2014/3/23 window.js 389 if(self.dragHelper) self.dragHelper.destroy(); 可能会没有dragHelper
                    197 增加tab 切换功能
                    
           if(settings.tab){
                var tabhtml='';
                for(i=0;i<settings.tab.length;i++){
                    tabhtml+='<li><a href="#'+settings.tab[i].name+'">'+settings.tab[i].title+'</a></li>';
                }
                tabhtml='<ul class="nav nav-tabs" id="modal_tab">'+tabhtml+'</ul>';
                headerHtml = (
                    '<div id="' + id + '-head" class="' + prefix + 'window-head">' +
                         tabhtml +
                        '<button type="button" class="' + prefix + 'close" aria-hidden="true">&times;</button>' +
                    '</div>'
                );              
            }

            if (typeof(html) == "undefined") {
                html = layout.renderHtml(self);
            }

            if (self.statusbar) {
                footerHtml = self.statusbar.renderHtml();
            }
            
            if(settings.tab){
                var tabhtml='';
                for(i=0;i<settings.tab.length;i++){
                    tabhtml+='<div class="tab-pane" id="'+settings.tab[i].name+'">'+settings.tab[i].html+'</div>';
                }
                tabhtml='<div class="tab-content">'+tabhtml+'</div>';
                html=tabhtml;                 
            }

2014/3/24 FormatControls 605 添加字体配置功能      
                items.push({
                    text:'设置..',
                    value:'settings'
                })
                
                618 ,增加字体设定功能
                    if (e.control.settings.value) {
                        //EditorManager.activeEditor.execCommand('FontName', false, e.control.settings.value);
                        if(e.control.settings.value=="settings"){
                           EditorManager.activeEditor.execCommand('fonts', false, e.control.settings.value);
                        }
                        else EditorManager.activeEditor.execCommand('FontName', false, e.control.settings.value);
                    }
                    
2014/4/6 MenuItem.js 126行 增加对字体的控制重新生成menu
                if(self.settings.value=="收藏字体"){
                    if(typeof iFonts!="undefined"){
                        iFonts.resetFavFonts=function(){
                            settings.menu=iFonts.getFavFontItems();
                            self.menu=null;
                        }
                    }
                }
                
                if(self.settings.value=="本地字体"){
                    if(typeof iFonts!="undefined"){
                        iFonts.resetLocalFonts=function(){
                            settings.menu=iFonts.getFontItems();
                            self.menu=null;
                        }
                    }
                }

2014/4/6 FormatControls.js 555 ,重新修改font-select 代码
        Factory.add('fontselect', function(settings) {
            var defaultFontsFormats =
                '黑体=Hiragino Sans GB,Microsoft YaHei,SimHei,STHeiti;' +
                '宋体=SimSun,宋体,STSong;' +
               // '仿宋=FangSong,STFangsong;'+
                //'楷体=KaiTi,STKaiti;' +
                'Andale Mono=andale mono,times;' +
                'Arial=arial,helvetica,sans-serif;' +
                'Arial Black=arial black,avant garde;' +
                'Book Antiqua=book antiqua,palatino;' +
                'Comic Sans MS=comic sans ms,sans-serif;' +
                'Courier New=courier new,courier;' +
                'Georgia=georgia,palatino;' +
                'Helvetica=helvetica;' +
                'Impact=impact,chicago;' +
                //'Symbol=symbol;' +
                'Tahoma=tahoma,arial,helvetica,sans-serif;' +
                'Terminal=terminal,monaco;' +
                'Times New Roman=times new roman,times;' +
                'Trebuchet MS=trebuchet ms,geneva;' +
                'Verdana=verdana,geneva';
                //'Webdings=webdings;' +
                //'Wingdings=wingdings,zapf dingbats';

            var items = [], fonts = createFormats(editor.settings.font_formats || defaultFontsFormats);

            each(fonts, function(font) {
                items.push({
                    text: {raw: font[0]},
                    value: font[1],
                    textStyle: font[1].indexOf('dings') == -1 ? 'font-family:' + font[1] : ''
                });
            });
            
            
            var getFavFontItems=function(){
                var menu=[];
                if(editor.settings.fav_fonts_zh){
                    var fav_fonts_zh=createFormats(editor.settings.fav_fonts_zh);
                    each(fav_fonts_zh, function(font) {
                        var fontItem={
                            text: {raw: font[0]},
                            value: font[1],
                            textStyle:function(){
                                if(font[1]=="undefined") return 'color:#CCCCCC';
                                else return font[1].indexOf('dings') == -1 ? 'font-family:' + font[1] : ''
                            }
                        }                    
                        menu.push(fontItem);
                    });               
                }
                return menu;                
            }
            if(typeof iFonts!="undefined"){
                items.push({
                    text:'收藏字体',
                    menu:getFavFontItems(),
                    value:'收藏字体'
                })                
            }
            
            var getFontItems=function(){
                var menu=[];
                
                if(editor.settings.custom_font_formats_en){
                    var custom_fonts=createFormats(editor.settings.custom_font_formats_en);
                    each(custom_fonts, function(font) {
                        var fontItem={
                            text: {raw: font[0]},
                            value: font[1],
                            textStyle: font[1].indexOf('dings') == -1 ? 'font-family:' + font[1] : ''
                        }                    
                        menu.push(fontItem);
                    });               
                }
                
                if(editor.settings.custom_font_formats_zh){
                    var custom_fonts=createFormats(editor.settings.custom_font_formats_zh);
                    each(custom_fonts, function(font) {
                        var fontItem={
                            text: {raw: font[0]},
                            value: font[1],
                            textStyle:function(){
                                if(font[1]=="undefined") return 'color:#CCCCCC';
                                else return font[1].indexOf('dings') == -1 ? 'font-family:' + font[1] : ''
                            }
                        }                    
                        menu.push(fontItem);
                    });               
                }
                return menu;                
            }
            
           if(typeof iFonts!="undefined"){     
                items.push({
                    text:'本地字体',
                    menu:getFontItems(),
                    value:'本地字体'
                })
                items.push({
                    text:'设置..',
                    value:'settings'
                })                   
            
           
                iFonts.getFontItems=getFontItems;
                iFonts.getFavFontItems=getFavFontItems;
            }
            
2014/7/24 DOMUtils.js  332行， for iframe element add contenteditable
        get: function(elm) {
            //patch for iframe element 
            var name;
            var doc=this.doc;
            if(tinymce.doc) doc=tinymce.doc;
            if (elm && doc && typeof(elm) == 'string') {
                name = elm;
                elm = doc.getElementById(elm);

                // IE and Opera returns meta elements when they match the specified input ID, but getElementsByName seems to do the trick
                if (elm && elm.id !== name) {
                    return doc.getElementsByName(name)[1];
                }
            }

            return elm;
        },
        
2014/7/24 增加coolsite skin 

2015/2/24 修改Node.js 346行 if(ref_node.next) 修复bug
          增加custom_media for coolsite cms